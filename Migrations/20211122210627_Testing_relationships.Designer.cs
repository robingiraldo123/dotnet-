// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using dotnet_api.Models;

namespace dotnet_api.Migrations
{
    [DbContext(typeof(AlacenaContext))]
    [Migration("20211122210627_Testing_relationships")]
    partial class Testing_relationships
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("dotnet_api.Models.Categories", b =>
                {
                    b.Property<string>("idCategory")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(45)");

                    b.Property<int?>("CategoriesXProductidCategoriesXProduct")
                        .HasColumnType("int");

                    b.Property<string>("category")
                        .HasColumnType("nvarchar(45)");

                    b.HasKey("idCategory");

                    b.HasIndex("CategoriesXProductidCategoriesXProduct");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("dotnet_api.Models.CategoriesXProduct", b =>
                {
                    b.Property<int>("idCategoriesXProduct")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("idCategoriesXProduct");

                    b.ToTable("CategoriesXProduct");
                });

            modelBuilder.Entity("dotnet_api.Models.Products", b =>
                {
                    b.Property<string>("idProducts")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(45)");

                    b.Property<int?>("CategoriesXProductidCategoriesXProduct")
                        .HasColumnType("int");

                    b.Property<string>("TrademarksidTrademarks")
                        .HasColumnType("nvarchar(45)");

                    b.Property<string>("barCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(300)");

                    b.Property<DateTime>("expirationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("nameProduct")
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("idProducts");

                    b.HasIndex("CategoriesXProductidCategoriesXProduct");

                    b.HasIndex("TrademarksidTrademarks");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("dotnet_api.Models.Trademarks", b =>
                {
                    b.Property<string>("idTrademarks")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(45)");

                    b.Property<string>("mark")
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("idTrademarks");

                    b.ToTable("Trademarks");
                });

            modelBuilder.Entity("dotnet_api.Models.Categories", b =>
                {
                    b.HasOne("dotnet_api.Models.CategoriesXProduct", "CategoriesXProduct")
                        .WithMany("Categories_idCategory")
                        .HasForeignKey("CategoriesXProductidCategoriesXProduct");

                    b.Navigation("CategoriesXProduct");
                });

            modelBuilder.Entity("dotnet_api.Models.Products", b =>
                {
                    b.HasOne("dotnet_api.Models.CategoriesXProduct", "CategoriesXProduct")
                        .WithMany("Products_idProducts")
                        .HasForeignKey("CategoriesXProductidCategoriesXProduct");

                    b.HasOne("dotnet_api.Models.Trademarks", "Trademarks")
                        .WithMany("Products_idProducts")
                        .HasForeignKey("TrademarksidTrademarks");

                    b.Navigation("CategoriesXProduct");

                    b.Navigation("Trademarks");
                });

            modelBuilder.Entity("dotnet_api.Models.CategoriesXProduct", b =>
                {
                    b.Navigation("Categories_idCategory");

                    b.Navigation("Products_idProducts");
                });

            modelBuilder.Entity("dotnet_api.Models.Trademarks", b =>
                {
                    b.Navigation("Products_idProducts");
                });
#pragma warning restore 612, 618
        }
    }
}
